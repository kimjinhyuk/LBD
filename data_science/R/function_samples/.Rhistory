shiny::runApp('shiny_r_go')
movies <- read.csv('data/IMDBDataset.csv')
movies <- read.csv('./data/IMDBDataset.csv')
movies <- read.csv('~/data/IMDBDataset.csv')
movies <- read.csv('data/IMDBDataset.csv')
movies <- read.csv('data/IMDBDataset.csv',header=T)
list.files() #현재 워킹디렉토리 안에 파일 보기
movies <- read.csv('C:/Users/kimji/00_LearningByDoing/data_science/kaggle/02_IMDB/data/IMDBDataset.csv',header=T)
movies
#Structure and summary of dataset
str(movies)
summary(movies)
# To see abstract of dataset
head(movies)  # top 6 rows
tail(movies)  # last 6 rows
movies <- read.csv('C:/Users/kimji/00_LearningByDoing/data_science/kaggle/02_IMDB/data/Movie Ratings.csv',header=T)
#Structure and summary of dataset
str(movies)
summary(movies)
# To see abstract of dataset
head(movies)  # top 6 rows
tail(movies)  # last 6 rows
#change the column names
colnames(movies) <- c('name','genre','criticsratings','audienceratings','budgetmillions','releaseyear')
# To see the types of genre
levels(movies$genre)
head(movies)
# To see the types of genre
levels(movies$genre)
head(movies)
# To see the types of genre
levels(movies$genre)
# changing the numeric column to categorical
movies$releaseyear<-as.factor(movies$releaseyear)
levels(movies$releaseyear)
levels(movies$releaseyear)
# To see the types of genre
levels(movies$genre)
#change the column names
colnames(movies) <- c('name','genre','criticsratings','audienceratings','budgetmillions','releaseyear')
# To see the types of genre
levels(movies$genre)
levels(movies$releaseyear)
head(movies)
# install ggplot2 package
library(ggplot2)
ggplot(data=movies,aes(x=criticsratings,y=audienceratings)) + geom_point()
str(allPackage <- installed.packages(.Library, priority = "high"))
allPackage [, c(1,3:5)]
installed.packages()
installed.packages()
In_P <- installed.packages()[,1]
available.packages()
Av_P <- available.packages()[,1]
Un_P <- Av_P[!Av_P %in% In_P]
install.packages(Un_P)
installed.packages
installed.packages
installed.packages
list.files() #현재 워킹디렉토리 안에 파일 보기
setwd("C:\Users\kimji\00_LearningByDoing\data_science\R\function_samples")
setwd("C:/Users/kimji/00_LearningByDoing/data_science/R/function_samples")
library(KoNLP)
getwd()
list.files() #현재 워킹디렉토리 안에 파일 보기
text1 <- readLines('text02.txt')
text2 <- extractNoun(text1)
text3 <- unlist(text2)
#전처리
text4 <-gsub("ㅎ","",text3)
text4 <-gsub("ㅋㅋ","",text3)
text4 <-gsub("^^","",text3)
text5 <- text4[nchar(text4) < 5]
text5 <- text5[nchar(text5) > 1]
text6 <- sort(table(text5), decreasing = T)
text7 <- head(text6, 300)
install.packages("wordcloud2")
library(wordcloud2)
wordcloud2(text7, size=3)
a <- mtcars
View(a)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
data(CPS85 , package = "mosaicData")
library(tidyverse)
movies <- read.csv('C:/Users/kimji/00_LearningByDoing/data_science/kaggle/02_IMDB/data/Movie Ratings.csv',header=T)
#Structure and summary of dataset
str(movies)
summary(movies)
# To see abstract of dataset
head(movies)  # top 6 rows
tail(movies)  # last 6 rows
#change the column names
colnames(movies) <- c('name','genre','criticsratings','audienceratings','budgetmillions','releaseyear')
# To see the types of genre
levels(movies$genre)
head(movies)
# changing the numeric column to categorical
movies$releaseyear<-as.factor(movies$releaseyear)
levels(movies$releaseyear)
# install ggplot2 package
library(ggplot2)
ggplot(data=movies,aes(x=criticsratings,y=audienceratings)) + geom_point()
# color and size setting
#ggplot(data=movies,aes(x=criticsratings,y=audienceratings,color=genre,size=budgetmillions))
r<-ggplot(data=movies,aes(x=criticsratings,y=audienceratings))+geom_point(color='red',size=3)
r
#Color and Size mapping
r+geom_point(aes(color='yellow'))
r+geom_point(aes(size=budgetmillions))
# changing the graph type
ggplot(data=movies,aes(x=budgetmillions))+
geom_histogram(binwidth=10,color='blue',fill='green')
# genre mappig
ggplot(data=movies,aes(x=budgetmillions))+
geom_histogram(binwidth=10,color='black',aes(fill=genre))
#Using facet grid to divide the graph according to genre
ggplot(data=movies,aes(x=criticsratings,y=audienceratings))+geom_point(color='red',size=3)+
facet_grid(.~genre)
d <- ggplot(data=movies,aes(x=budgetmillions))+
geom_density(color='black',stack=10,aes(fill=genre))
d
# Adding new layer for limiting the yscale
ggplot(data=movies,aes(x=budgetmillions))+
geom_histogram(binwidth=10,color='black',aes(fill=genre))+
coord_cartesian(ylim=c(0,50))
# histograms with facet grid
ggplot(data=movies,aes(x=budgetmillions))+
geom_histogram(binwidth=10,color='black',aes(fill=genre))+
facet_grid(genre~.,scales='free')
# Scaling x and y coordinates
t <- ggplot(data=movies,aes(x=criticsratings,y=audienceratings,color=genre))+geom_point(size=3)+
facet_grid(genre~releaseyear)+xlim(0,100)+ylim(0,50)
t
# adding themes to plots
# install ggthemes package
library(ggthemes)
# adding themes to plots
install ggthemes package
# adding themes to plots
install.package(ggthemes)
#help(ggthemes)
d + theme_economist()
movies <- read.csv('../data/Movie Ratings.csv',header=T)
movies <- read.csv('~/../data/Movie Ratings.csv',header=T)
movies <- read.csv('~/data/Movie Ratings.csv',header=T)
movies <- read.csv('./data/Movie Ratings.csv',header=T)
movies <- read.csv('data/Movie Ratings.csv',header=T)
movies <- read.csv('data/Movie Ratings.csv',header=T)
movies <- read.csv('data\Movie Ratings.csv',header=T)
movies <- read.csv('.\\data\\Movie Ratings.csv',header=T)
movies <- read.csv('data\\Movie Ratings.csv',header=T)
movies <- read.csv('data/Movie Ratings.csv',header=T)
getwd()
setwd("C:/Users/kimji/00_LearningByDoing/data_science/kaggle/02_IMDB")
movies <- read.csv('data/Movie Ratings.csv',header=T)
#Structure and summary of dataset
str(movies)
summary(movies)
#change the column names
colnames(movies) <- c('name','genre','criticsratings','audienceratings','budgetmillions','releaseyear')
# To see the types of genre
levels(movies$genre)
head(movies)
# changing the numeric column to categorical
movies$releaseyear<-as.factor(movies$releaseyear)
levels(movies$releaseyear)
# install ggplot2 package
library(ggplot2)
ggplot(data=movies,aes(x=criticsratings,y=audienceratings)) + geom_point()
# color and size setting
#ggplot(data=movies,aes(x=criticsratings,y=audienceratings,color=genre,size=budgetmillions))
r<-ggplot(data=movies,aes(x=criticsratings,y=audienceratings))+geom_point(color='red',size=3)
r
#Color and Size mapping
r+geom_point(aes(color='yellow'))
#Color and Size mapping
r+geom_point(aes(color='yellow'))
r+geom_point(aes(size=budgetmillions))
# changing the graph type
ggplot(data=movies,aes(x=budgetmillions))+
geom_histogram(binwidth=10,color='blue',fill='green')
# genre mappig
ggplot(data=movies,aes(x=budgetmillions))+
geom_histogram(binwidth=10,color='black',aes(fill=genre))
#Using facet grid to divide the graph according to genre
ggplot(data=movies,aes(x=criticsratings,y=audienceratings))+geom_point(color='red',size=3)+
facet_grid(.~genre)
d <- ggplot(data=movies,aes(x=budgetmillions))+
geom_density(color='black',stack=10,aes(fill=genre))
d
# Adding new layer for limiting the yscale
ggplot(data=movies,aes(x=budgetmillions))+
geom_histogram(binwidth=10,color='black',aes(fill=genre))+
coord_cartesian(ylim=c(0,50))
knitr::opts_chunk$set(echo = TRUE)
movies <- read.csv('data/Movie Ratings.csv',header=T)
movies <- read.csv('data/Movie Ratings.csv',header=T)
movies <- read.csv('data/Movie Ratings.csv',header=T)
movies <- read.csv('data/Movie Ratings.csv',header=T)
movies <- read.csv('data/Movie Ratings.csv',header=T)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
r<-ggplot(data=movies,aes(x=criticsratings,y=audienceratings))+geom_point(color='red',size=3)
r
r<-ggplot(data=movies,aes(x=criticsratings,y=audienceratings))+geom_point(color='red',size=3)
r
colnames(movies) <- c('name','genre','criticsratings','audienceratings','budgetmillions','releaseyear')
colnames(movies) <- c('name','genre','criticsratings','audienceratings','budgetmillions','releaseyear')
colnames(movies) <- c('name','genre','criticsratings','audienceratings','budgetmillions','releaseyear')
## To see the types of genre
```{r}
levels(movies$genre)
head(movies)
```
## changing the numeric column to categorical
```{r}
movies$releaseyear<-as.factor(movies$releaseyear)
levels(movies$releaseyear)
```
View(pressure)
View(pressure)
setwd("C:/Users/kimji/00_LearningByDoing/data_science/R/function_samples")
library(KoNLP)
setwd("C:/Users/kimji/00_LearningByDoing/data_science/R/function_samples")
library(KoNLP)
text1 <- readLines('text02.txt')
text2 <- extractNoun(text1)
text3 <- unlist(text2)
#전처리
text4 <-gsub("ㅎ","",text3)
text4 <-gsub("ㅋㅋ","",text3)
text4 <-gsub("^^","",text3)
text5 <- text4[nchar(text4) < 5]
text5 <- text5[nchar(text5) > 1]
text6 <- sort(table(text5), decreasing = T)
text7 <- head(text6, 300)
library(wordcloud2)
wordcloud2(text7, size=3)
```{r wordcloud2, echo=FALSE}
library(wordcloud2)
wordcloud2(text7, size=3)
text4 <-gsub("ㅎ","",text3)
text4 <-gsub("ㅋㅋ","",text3)
text4 <-gsub("^^","",text3)
text4 <-gsub("ㅋ","",text3)
text4 <-gsub("ㅎ","",text3)
text5 <- text4[nchar(text4) < 5]
text5 <- text5[nchar(text5) > 1]
text6 <- sort(table(text5), decreasing = T)
text7 <- head(text6, 300)
library(wordcloud2)
wordcloud2(text7, size=3)
setwd("C:/Users/kimji/00_LearningByDoing/data_science/R/function_samples")
library(KoNLP)
setwd("C:/Users/kimji/00_LearningByDoing/data_science/R/function_samples")
getwd()
library(KoNLP)
text1 <- readLines('text02.txt')
setwd("C:/Users/kimji/00_LearningByDoing/data_science/R/function_samples")
getwd()
library(KoNLP)
text1 <- readLines('text02.txt')
text1 <- readLines('text02.txt')
```{r text1, echo=FALSE}
knitr::opts_chunk$set(echo = TRUE)
wordcloud2(text7, size=3)
text4 <-gsub("ㅎ","",text3)
text4 <-gsub("ㅋㅋ","",text3)
text4 <-gsub("^^","",text3)
text4 <-gsub("ㅋ","",text3)
text4 <-gsub("ㅎ","",text3)
wordcloud2(text7, size=3)
