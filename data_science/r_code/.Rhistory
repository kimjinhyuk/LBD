help()
q()
# Vector 만들기.
x <- c(0.5, 0.6)                  # numeric.
x
x <- c(TRUE,TRUE, FALSE)          # logical.
x
x <- c(T,T,F)                     # logical.
x
x <- c("a","b","c")               # character.
x
ls
getwd()
getwd()
getwd()
getwd()
getwd()
setwd('C:/Users/kimji/ai-school/09_Workspace_R')
getwd()
getwd()
a
a
a <- getwd()
a
q()
ls()
y <- c(2,3,4,5)
x <- 100
f <- function(y) (y-32)/1.8
here <- c('Superman', 'Batman', 'Spiderman')
ls()
ls().str
ls().str
ls.str()
z <- 3.14
rm(z)
rm(x, y)
ls.str()
a
ls.str()
a <- 0
Sys.Date()
date()
#### Start of testing code
library(tidyverse)
font_add_google("Nanum Gothic", "nanumgothic")
data <- "안녕하세요"
data
data2 <- 30
v1 <- c(1,2,3)
v1
v1 <- c(1,2,3,4,5,6,7,8,9,10,11)
v1
v2 <- c('사과','배','딸기','참외','수박','바나나나')
v2
v2 <- c('사과','배','딸기',
'참외','수박','바나나나')
v2 <- c('사과','배','딸기',
'참외','수박','바나나나')
v2
v4 <- c(10,TRUE,"스마트")
v4
v5
v5 <- c(10,TRUE)
v5
x <- seq(1,10)
x
v6 <- seq(1,12)
v6
v7<- 1:13
v7
v8<- seq(1,10,by=4)
v8
v8<- seq(1,10,length.out = 4)
v8
v9 <- 1:3
rep(v9, times = 3)
rep(v9, each = 3)
rep(v9, each = 3)
rep(v9, each = 3)
rep(v9, each = 3)
rep(v9, each = 3)
rep(v9, times = 3)
y <- c(1,2,3,4,5,6,7,8,9,10)
y[3]
v2[1]
v2[3]
v2[1,3]
v2[1][3]
v2[1:3]
v2[c(4,5)]
x <- c(1,2,3)
y<-c(3,4,5)
#벡터의 연산
x + y
x - y
x * y
#집합
union(x,y)
setdiff(x,y)
intersect(x,y)#교집합합
mat1 <- matrix(c(1,2,3,4))
mat1
mat2<- matrix(c(1,2,3,4), nrow(2))
mat2<- matrix(c(1,2,3,4), nrow=2)
mat2
mat <- matrix(v1)
mat1 <- matrix(v1)
mat1
mat1 <- matrix(v1, nrow = 2)
v1 <- c(1,2,3,4)
mat1 <- matrix(v1, nrow = 2)
mat1
mat1 <- matrix(v1, nrow = 2, byrow = T)
mat1
#매트릭스 값 꺼내기
mat2[2,1]
mat2[2,2]
#행 또는 열의 값 꺼내기
mat1[1:]
#행 또는 열의 값 꺼내기
mat1[1,]
mat1[,1]
rm(list = lsf.str())
rm(list=ls())
No <- c(1,2,3,4)
Name <- c('Apple','Peach','Banana','Grape')
Price <-c(500,200,100,50)
Qty <- c(5,2,4,7)
sales <- data.frame(No,Name,Price,Qty)
sales
View(sales)
sales[ ,2]
sales[2, ]
sales[ ,3]
sales$Price
sales$Name
sales[1,]
sales[1,2]
sales[1,2]
sales[1,2,]
sales[c(1,2)]
sales[c(1,2), ]
setwd("C:/Users/kimji/00_LearningByDoing/LBD/data_science")
setwd("C:\Users\kimji\00_LearningByDoing\LBD\data_science\kaggle\01_Titinic_Machine LEarning from Disaster\data")
titanic.train <- read.csv(file = 'train.csv', stringsAsFactors = FALSE, header = TRUE)
setwd("C:/Users/kimji/00_LearningByDoing/LBD/data_science/kaggle")
titanic.train <- read.csv(file = 'train.csv', stringsAsFactors = FALSE, header = TRUE)
titanic.test <- read.csv(file = 'test.csv', stringsAsFactors = FALSE, header = TRUE)
str(titanic.test)
median(titanic.train$Age, na.rm=TRUE)
median(titanic.test$Age, na.rm=TRUE)
titanic.train$IsTrainSet <- TRUE
tail(titanic.train$IsTrainSet)
titanic.test$IsTrainSet <- FALSE
